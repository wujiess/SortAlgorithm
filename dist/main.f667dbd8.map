{"version":3,"sources":["main.js"],"names":["selectionSort","array","i","arr","length","minIndex","j","swap","indexA","indexB","temp","quickSort","pivotIndex","Math","floor","pivot","splice","left","right","push","concat","mergeSort","arr1","slice","arr2","merge","displaySortArray","div","message","innerHTML","ul","document","createElement","className","messageLi","append","li","generateArray","count","maxValue","parseInt","random","initArray","arrayDiv","sortResult","btnInitArray","onclick","btnSelectionSort","result","btnQuickSort","btnMergeSort","markdown","text","converter","showdown","Converter","html","makeHtml","console","log","code"],"mappings":"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","file":"main.f667dbd8.map","sourceRoot":"../src","sourcesContent":["//选择排序\r\nlet selectionSort = (array) => {\r\n    for (let i = 0; i < arr.length; i++) {\r\n        let minIndex = i;\r\n        for (let j = i + 1; j < arr.length; j++) {\r\n            if (array[j] < array[minIndex]) {\r\n                minIndex = j;\r\n            }\r\n        }\r\n        if (minIndex !== i) {\r\n            swap(array, i, minIndex);\r\n        }\r\n    }\r\n    return array;\r\n}\r\n\r\nlet swap = (array, indexA, indexB) => {\r\n    let temp = array[indexA];\r\n    array[indexA] = array[indexB];\r\n    array[indexB] = temp;\r\n}\r\n\r\n//快速排序\r\nlet quickSort = (array) => {\r\n    if (array.length <= 1) {\r\n        return array;\r\n    }\r\n    const pivotIndex = Math.floor(array.length / 2);\r\n    var pivot = array.splice(pivotIndex, 1)[0];\r\n\r\n    const left = [];\r\n    const right = [];\r\n    for (let i = 0; i < array.length; i++) {\r\n        if (array[i] < pivot) {\r\n            left.push(array[i])\r\n        } else {\r\n            right.push(array[i]);\r\n        }\r\n    }\r\n    return quickSort(left).concat([pivot], quickSort(right));\r\n}\r\n\r\n//归并排序\r\nlet mergeSort = (array) => {\r\n    if (array.length === 1) {\r\n        return array;\r\n    }\r\n    let arr1 = array.slice(0, Math.floor(array.length / 2));\r\n    let arr2 = array.slice(Math.floor(array.length / 2));\r\n    return merge(mergeSort(arr1), mergeSort(arr2));\r\n}\r\n\r\nlet merge = (arr1, arr2) => {\r\n    if (!arr1.length) {\r\n        return arr2;\r\n    }\r\n    if (!arr2.length) {\r\n        return arr1;\r\n    }\r\n    if (arr1[0] < arr2[0]) {\r\n        return [arr1[0]].concat(merge(arr1.slice(1), arr2));\r\n    } else {\r\n        return [arr2[0]].concat(merge(arr1, arr2.slice(1)))\r\n    }\r\n}\r\n\r\nlet displaySortArray = (array, div, message) => {\r\n    div.innerHTML = '';\r\n    const ul = document.createElement('ul');\r\n    ul.className = 'itemsUl';\r\n    const messageLi = document.createElement('li');\r\n    messageLi.innerHTML = message;\r\n    ul.append(messageLi);\r\n    for (let i = 0; i < array.length; i++) {\r\n        const li = document.createElement('li');\r\n        li.innerHTML = array[i];\r\n        ul.append(li);\r\n    }\r\n    div.append(ul);\r\n}\r\n\r\nlet generateArray = (count, maxValue) => {\r\n    let arr = [];\r\n    for (let i = 0; i < count; i++) {\r\n        arr.push(parseInt(Math.random() * (maxValue + 1)));\r\n    }\r\n    return arr;\r\n}\r\n\r\nlet arr;\r\n\r\nlet initArray = () => {\r\n    arr = generateArray(10, 1000);\r\n    displaySortArray(arr, arrayDiv, '初始数组');\r\n    sortResult.innerHTML = '';\r\n}\r\n\r\ninitArray();\r\n\r\nbtnInitArray.onclick = () => {\r\n    initArray();\r\n}\r\n\r\nbtnSelectionSort.onclick = () => {\r\n    const array = arr.slice();\r\n    let result = quickSort(array);\r\n    displaySortArray(result, sortResult, '选择排序');\r\n    // markdown(`\r\n    // let selectionSort = (array) => {\r\n    //     for (let i = 0; i < arr.length; i++) {\r\n    //         let minIndex = i;\r\n    //         for (let j = i + 1; j < arr.length; j++) {\r\n    //             if (array[j] < array[minIndex]) {\r\n    //                 minIndex = j;\r\n    //             }\r\n    //         }\r\n    //         if (minIndex !== i) {\r\n    //             swap(array, i, minIndex);\r\n    //         }\r\n    //     }\r\n    //     return array;\r\n    // }`);\r\n}\r\n\r\nbtnQuickSort.onclick = () => {\r\n    const array = arr.slice();\r\n    let result = quickSort(array);\r\n    displaySortArray(result, sortResult, '快速排序');\r\n}\r\n\r\nbtnMergeSort.onclick = () => {\r\n    const array = arr.slice();\r\n    let result = mergeSort(array);\r\n    displaySortArray(result, sortResult, '归并排序');\r\n}\r\n\r\nfunction markdown(text) {\r\n    //创建实例\r\n    var converter = new showdown.Converter();\r\n    //进行转换\r\n    var html = converter.makeHtml(text);\r\n    console.log(html);\r\n    //展示到对应的地方  result便是id名称\r\n    code.innerHTML = html;\r\n}"]}