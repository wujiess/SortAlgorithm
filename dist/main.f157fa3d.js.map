{"version":3,"sources":["main.js"],"names":["selectionSort","array","i","length","minIndex","j","swap","indexA","indexB","temp","quickSort","pivotIndex","Math","floor","pivot","splice","left","right","push","concat","mergeSort","arr1","slice","arr2","merge","displaySortArray","div","message","innerHTML","ul","document","createElement","className","messageLi","append","li","generateArray","count","maxValue","arr","parseInt","random","initArray","arrayDiv","sortResult","btnInitArray","onclick","btnSelectionSort","result","code","hljs","highlightAll","languages","btnQuickSort","btnMergeSort"],"mappings":"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","file":"main.f157fa3d.js","sourceRoot":"..\\src","sourcesContent":["//选择排序\r\nlet selectionSort = (array) => {\r\n    for (let i = 0; i < array.length; i++) {\r\n        let minIndex = i;\r\n        for (let j = i + 1; j < array.length; j++) {\r\n            if (array[j] < array[minIndex]) {\r\n                minIndex = j;\r\n            }\r\n        }\r\n        if (minIndex !== i) {\r\n            swap(array, i, minIndex);\r\n        }\r\n    }\r\n    return array;\r\n}\r\n\r\nlet swap = (array, indexA, indexB) => {\r\n    let temp = array[indexA];\r\n    array[indexA] = array[indexB];\r\n    array[indexB] = temp;\r\n}\r\n\r\n//快速排序\r\nlet quickSort = (array) => {\r\n    if (array.length <= 1) {\r\n        return array;\r\n    }\r\n    const pivotIndex = Math.floor(array.length / 2);\r\n    var pivot = array.splice(pivotIndex, 1)[0];\r\n\r\n    const left = [];\r\n    const right = [];\r\n    for (let i = 0; i < array.length; i++) {\r\n        if (array[i] < pivot) {\r\n            left.push(array[i])\r\n        } else {\r\n            right.push(array[i]);\r\n        }\r\n    }\r\n    return quickSort(left).concat([pivot], quickSort(right));\r\n}\r\n\r\n//归并排序\r\nlet mergeSort = (array) => {\r\n    if (array.length <= 1) {\r\n        return array;\r\n    }\r\n    let arr1 = array.slice(0, Math.floor(array.length / 2));\r\n    let arr2 = array.slice(Math.floor(array.length / 2));\r\n    return merge(mergeSort(arr1), mergeSort(arr2));\r\n}\r\n\r\nlet merge = (arr1, arr2) => {\r\n    if (!arr1.length) {\r\n        return arr2;\r\n    }\r\n    if (!arr2.length) {\r\n        return arr1;\r\n    }\r\n    if (arr1[0] < arr2[0]) {\r\n        return [arr1[0]].concat(merge(arr1.slice(1), arr2));\r\n    } else {\r\n        return [arr2[0]].concat(merge(arr1, arr2.slice(1)))\r\n    }\r\n}\r\n\r\nlet displaySortArray = (array, div, message) => {\r\n    div.innerHTML = '';\r\n    const ul = document.createElement('ul');\r\n    ul.className = 'itemsUl';\r\n    const messageLi = document.createElement('li');\r\n    messageLi.innerHTML = message;\r\n    ul.append(messageLi);\r\n    for (let i = 0; i < array.length; i++) {\r\n        const li = document.createElement('li');\r\n        li.innerHTML = array[i];\r\n        ul.append(li);\r\n    }\r\n    div.append(ul);\r\n}\r\n\r\nlet generateArray = (count, maxValue) => {\r\n    let arr = [];\r\n    for (let i = 0; i < count; i++) {\r\n        arr.push(parseInt(Math.random() * (maxValue + 1)));\r\n    }\r\n    return arr;\r\n}\r\n\r\nlet arr;\r\n\r\nlet initArray = () => {\r\n    arr = generateArray(10, 1000);\r\n    displaySortArray(arr, arrayDiv, '初始数组');\r\n    sortResult.innerHTML = '';\r\n}\r\n\r\ninitArray();\r\n\r\nbtnInitArray.onclick = () => {\r\n    initArray();\r\n}\r\n\r\nbtnSelectionSort.onclick = () => {\r\n    const array = arr.slice();\r\n    let result = selectionSort(array);\r\n    displaySortArray(result, sortResult, '选择排序');\r\n    code.innerHTML = `\r\n    let selectionSort = (array) => {\r\n        for (let i = 0; i < array.length; i++) {\r\n            let minIndex = i;\r\n            for (let j = i + 1; j < array.length; j++) {\r\n                if (array[j] < array[minIndex]) {\r\n                    minIndex = j;\r\n                }\r\n            }\r\n            if (minIndex !== i) {\r\n                swap(array, i, minIndex);\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n    \r\n\r\n    let swap = (array, indexA, indexB) => {\r\n        let temp = array[indexA];\r\n        array[indexA] = array[indexB];\r\n        array[indexB] = temp;\r\n    }`;\r\n    hljs.highlightAll({\r\n        languages: 'javascript'\r\n    });\r\n}\r\n\r\nbtnQuickSort.onclick = () => {\r\n    const array = arr.slice();\r\n    let result = quickSort(array);\r\n    displaySortArray(result, sortResult, '快速排序');\r\n    code.innerHTML = `\r\n    let quickSort = (array) => {\r\n        if (array.length <= 1) {\r\n            return array;\r\n        }\r\n        const pivotIndex = Math.floor(array.length / 2);\r\n        var pivot = array.splice(pivotIndex, 1)[0];\r\n    \r\n        const left = [];\r\n        const right = [];\r\n        for (let i = 0; i < array.length; i++) {\r\n            if (array[i] < pivot) {\r\n                left.push(array[i])\r\n            } else {\r\n                right.push(array[i]);\r\n            }\r\n        }\r\n        return quickSort(left).concat([pivot], quickSort(right));\r\n    }`;\r\n    hljs.highlightAll({\r\n        languages: 'javascript'\r\n    });\r\n}\r\n\r\nbtnMergeSort.onclick = () => {\r\n    const array = arr.slice();\r\n    let result = mergeSort(array);\r\n    displaySortArray(result, sortResult, '归并排序');\r\n    code.innerHTML = `\r\n    let mergeSort = (array) => {\r\n        if (array.length <= 1) {\r\n            return array;\r\n        }\r\n        let arr1 = array.slice(0, Math.floor(array.length / 2));\r\n        let arr2 = array.slice(Math.floor(array.length / 2));\r\n        return merge(mergeSort(arr1), mergeSort(arr2));\r\n    }\r\n    \r\n    let merge = (arr1, arr2) => {\r\n        if (!arr1.length) {\r\n            return arr2;\r\n        }\r\n        if (!arr2.length) {\r\n            return arr1;\r\n        }\r\n        if (arr1[0] < arr2[0]) {\r\n            return [arr1[0]].concat(merge(arr1.slice(1), arr2));\r\n        } else {\r\n            return [arr2[0]].concat(merge(arr1, arr2.slice(1)))\r\n        }\r\n    }`;\r\n    hljs.highlightAll({\r\n        languages: 'javascript'\r\n    });\r\n}"]}